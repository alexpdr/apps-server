
version: "3.7"

services:
  server:
    image: drone/drone:latest
    container_name: drone-server
    restart: unless-stopped
    environment:
      - DRONE_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${RPC_SECRET}
      - DRONE_SERVER_HOST=${DOMAIN_DRONE}
      - DRONE_SERVER_PROTO=https
      - DRONE_TLS_AUTOCERT=true
    volumes:
      - ${GLOBAL_STORAGE}/drone/server:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.drone.tls=true
      - traefik.http.routers.drone.entrypoints=https
      - traefik.http.routers.drone.rule=Host(`${DOMAIN_DRONE}`)
      - traefik.http.routers.drone.tls.certresolver=letsencrypt
    networks:
      - proxy

  dr1:
    image: drone/drone-runner-docker:latest
    container_name: drone-r1
    restart: unless-stopped
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST=${DOMAIN_DR1}
      - DRONE_RPC_SECRET=${RPC_SECRET}
      - DRONE_RUNNER_NAME=dr1
      - DRONE_RUNNER_CAPACITY=2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${GLOBAL_STORAGE}/drone/dr1:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.dr1.tls=true
      - traefik.http.routers.dr1.entrypoints=https
      - traefik.http.routers.dr1.rule=Host(`${DOMAIN_DR1}`)
      - traefik.http.routers.dr1.tls.certresolver=letsencrypt
    networks:
      - proxy

networks:
  proxy:
    external: true

version: "3.7"

networks:
  proxy:  # Used to detect and route to apps & stacks
    name: proxy

services:
  # Traefik Reverse Proxy + LetsEncrypt auto-https
  traefik:
    image: traefik:v2.4
    container_name: traefik
    restart: unless-stopped
    command: --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
    environment: 
      - TRAEFIK_PILOT_TOKEN=${PILOT_TOKEN}
      - TRAEFIK_LOG=true
      - TRAEFIK_LOG_FILEPATH=${GLOBAL_STORAGE}/traefik/traefik.log
      - TRAEFIK_ACCESSLOG=true
      - TRAEFIK_ACCESSLOG_FILEPATH=${GLOBAL_STORAGE}/traefik/access.log
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ${GLOBAL_STORAGE}/ssl/acme.json:/etc/traefik/acme.json
    labels:
      # HTTP
      - traefik.http.routers.traefik-http.service=api@internal
      - traefik.http.routers.traefik-http.entrypoints=http
      - traefik.http.routers.traefik-http.rule=Host(`${DOMAIN_TRAEFIK}`)
      # HTTPS
      - traefik.http.routers.traefik-https.tls=true
      - traefik.http.routers.traefik-https.service=api@internal
      - traefik.http.routers.traefik-https.entrypoints=https
      - traefik.http.routers.traefik-https.rule=Host(`${DOMAIN_TRAEFIK}`)
    networks:
      - proxy

  # Portainer for management & deployments
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${GLOBAL_STORAGE}/portainer:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.routers.portainer.entrypoints=https
      - traefik.http.routers.portainer.rule=Host(`${DOMAIN_PORTAINER}`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    networks:
      - proxy
    depends_on:
      - traefik
version: '3.3'
services:
  drone-server:
    image: 'drone/drone:latest'
    container_name: 'drone-server'
    restart: always
    environment:
      - DRONE_GITHUB_CLIENT_ID=
      - DRONE_GITHUB_CLIENT_SECRET=
      - DRONE_RPC_SECRET=
      - DRONE_SERVER_HOST=drone.hs.alexpdr.com
      - DRONE_SERVER_PROTO=https
      - DRONE_TLS_AUTOCERT=true
    volumes:
      - /home/ap/global_storage/drone:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone.tls=true"
      - "traefik.http.routers.drone.entrypoints=https"
      - "traefik.http.routers.drone.rule=Host(`drone.hs.alexpdr.com`)"
      - "traefik.http.routers.ward.tls.certresolver=letsencrypt"
    networks:
      - "proxy"

  drone-runner:
    image: 'drone/drone-runner-docker:latest'
    container_name: 'drone-r1'
    restart: always
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST=drone.hs.alexpdr.com
      - DRONE_RPC_SECRET=
      - DRONE_RUNNER_NAME=dr1
      - DRONE_RUNNER_CAPACITY=2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ap/global_storage/dr1:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dr1.tls=true"
      - "traefik.http.routers.dr1.entrypoints=https"
      - "traefik.http.routers.dr1.rule=Host(`dr1.hs.alexpdr.com`)"
      - "traefik.http.routers.ward.tls.certresolver=letsencrypt"
    networks:
      - "proxy"

networks:
  proxy:
    external: true